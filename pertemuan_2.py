# -*- coding: utf-8 -*-
"""Pertemuan 2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13wX8h6uRQswZxyP4YL1ZexpOfLPPg8__
"""

import numpy as np

arr=np.array([[3,6],[9,7]])
arr[0,1]

#soal 1
import numpy as np

# arr=np.array([[5,8],[15,8],[5,12],[15,12]]) 
# p=arr[1,0]-arr[0,0]
# l=arr[2,1]-arr[0,1]

# luas = p*l
# print(luas)

A=np.array([5,8])
B=np.array([15,8])
C=np.array([5,12])
D=np.array([15,12])

def luas(a,b,c,d):
  v1=b-a
  v2=c-a
  return abs(np.cross(v1,v2))
luas(A,B,C,D)

#soal 2
import numpy as np

# a=np.random.rand(500,500)
# np.mean(a)

M = np.random.randint(256,size=(500,500))
def mean_matrix(m):
  return np.sum(m)/(500*500)

mean_matrix(M)

#soal 3
import numpy as np

# a= np.array((5,6))
# b=np.array((7,10))
# dist= np.linalg.norm(a-b)
# print(dist)


x= np.array((5,6))
y=np.array((7,10))

def euc(x,y):
  c = x-y
  h1= np.sqrt(c[0]**2+c[1]**2)
  h2= np.linalg.norm(c)
  return h1,h2
euc(x,y)